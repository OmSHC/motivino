# Combined Dockerfile - Frontend + Backend + Nginx in one container
FROM node:20-alpine AS frontend-builder

WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci --legacy-peer-deps
COPY frontend/ .
RUN npm run build

# Python backend stage
FROM python:3.11-slim

# Install nginx and other system dependencies
RUN apt-get update && apt-get install -y \
    nginx \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Set work directory
WORKDIR /app

# Copy Python requirements and install
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend source code
COPY motivation_news/ ./motivation_news/
COPY apps/ ./apps/
COPY manage.py .
COPY db.sqlite3* ./

# Copy built frontend from first stage
COPY --from=frontend-builder /app/frontend/build ./static/

# Copy nginx configuration
COPY nginx.combined.conf /etc/nginx/sites-available/default

# Create necessary directories
RUN mkdir -p /app/logs /app/staticfiles /app/media /var/log/gunicorn

# Create non-root user
RUN useradd --create-home --shell /bin/bash django
RUN chown -R django:django /app /var/log/gunicorn

# Copy startup script
COPY start-combined.sh /start.sh
RUN chmod +x /start.sh

# Expose ports
EXPOSE 80 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Start both services
CMD ["/start.sh"]
