version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-change-in-production
      - DATABASE_URL=/app/db.sqlite3
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/core/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
      - frontend_build:/app/build_output
    command: ["sh", "-c", "echo '🏗️ Building React app...' && npm run build && echo '📋 Build output:' && ls -la build/ && echo '📁 Copying to volume...' && mkdir -p /app/build_output && cp -r build/* /app/build_output/ && echo '✅ Files in volume:' && ls -la /app/build_output/ && echo '🎉 Frontend build complete!'"]

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  redis_data:
  frontend_build:
