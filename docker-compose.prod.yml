services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: motivation_news
      POSTGRES_USER: motivation_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-motivation_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U motivation_user -d motivation_news"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    image: ${BACKEND_IMAGE:-motivation-backend:latest}
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:8000 --chdir /app motivation_news.wsgi:application --log-file -
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=motivation_news
      - DATABASE_USER=motivation_user
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-motivation_password}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,${DOMAIN:-localhost}
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000,https://${DOMAIN:-localhost}
    volumes:
      - logs_data:/app/logs
      - staticfiles_data:/app/staticfiles
      - media_data:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  frontend:
    image: ${FRONTEND_IMAGE:-motivation-frontend:latest}
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=/api
      - CI=false
    volumes:
      - frontend_build:/app/build_output
    restart: "no"
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
  logs_data:
  staticfiles_data:
  media_data:
  frontend_build:
  nginx_logs:
